PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF,

####################################
>>> torch.backends.cudnn.version()
8700

####################################
>>> cat /home/sebastian/miniconda3/envs/pytorch/lib/python3.8/site-packages/nvidia/cudnn/include/cudnn_version.h | grep CUDNN_MAJOR -A 2
#ifndef CUDNN_VERSION_H_
#define CUDNN_VERSION_H_

#define CUDNN_MAJOR 8
#define CUDNN_MINOR 7
#define CUDNN_PATCHLEVEL 0

#define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)

/* cannot use constexpr here since this is a C-only file */
/* Below is the max SM version this cuDNN library is aware of and supports natively */

#define CUDNN_MAX_SM_MAJOR_NUMBER 9
#define CUDNN_MAX_SM_MINOR_NUMBER 0
#define CUDNN_MAX_DEVICE_VERSION (CUDNN_MAX_SM_MAJOR_NUMBER * 100) + (CUDNN_MAX_SM_MINOR_NUMBER * 10)

#endif /* CUDNN_VERSION_H */

####################################
>>> cat /proc/driver/nvidia/version                                                                                                                                                                                                                                           ✔  base    10:10:46
NVRM version: NVIDIA UNIX x86_64 Kernel Module  550.120  Fri Sep 13 10:10:01 UTC 2024
GCC version:  gcc version 12.3.0 (Ubuntu 12.3.0-1ubuntu1~22.04)

####################################
>>> gcc --version
gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
Copyright (C) 2021 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

#####################################
>>> nvidia-smi
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.120                Driver Version: 550.120        CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA GeForce RTX 4060 Ti     Off |   00000000:01:00.0  On |                  N/A |
|  0%   44C    P3             25W /  165W |    3099MiB /  16380MiB |     15%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+

+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|    0   N/A  N/A      1996      G   /usr/lib/xorg/Xorg                           2204MiB |
|    0   N/A  N/A      2154      G   /usr/bin/gnome-shell                          157MiB |
|    0   N/A  N/A      4797      G   ...seed-version=20241120-181307.991000        265MiB |
|    0   N/A  N/A     26715      G   ...nglingPtr --variations-seed-version        266MiB |
|    0   N/A  N/A     33006      G   ...erProcess --variations-seed-version        106MiB |
+-----------------------------------------------------------------------------------------+

#########################################
torch.backends.cudnn.deterministic = True
torch.backends.cudnn.benchmark = False

##########################################
>>> nvcc --version
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2022 NVIDIA Corporation
Built on Wed_Sep_21_10:33:58_PDT_2022
Cuda compilation tools, release 11.8, V11.8.89
Build cuda_11.8.r11.8/compiler.31833905_0

##########################################
>>> cat /usr/local/cuda/version.json

{
   "cuda" : {
      "name" : "CUDA SDK",
      "version" : "11.8.20220929"
   },
   "cuda_cccl" : {
      "name" : "CUDA C++ Core Compute Libraries",
      "version" : "11.8.89"
   },
   "cuda_cudart" : {
      "name" : "CUDA Runtime (cudart)",
      "version" : "11.8.89"
   },
   "cuda_cuobjdump" : {
      "name" : "cuobjdump",
      "version" : "11.8.86"
   },
   "cuda_cupti" : {
      "name" : "CUPTI",
      "version" : "11.8.87"
   },
   "cuda_cuxxfilt" : {
      "name" : "CUDA cu++ filt",
      "version" : "11.8.86"
   },
   "cuda_demo_suite" : {
      "name" : "CUDA Demo Suite",
      "version" : "11.8.86"
   },
   "cuda_gdb" : {
      "name" : "CUDA GDB",
      "version" : "11.8.86"
   },
   "cuda_memcheck" : {
      "name" : "CUDA Memcheck",
      "version" : "11.8.86"
   },
   "cuda_nsight" : {
      "name" : "Nsight Eclipse Plugins",
      "version" : "11.8.86"
   },
   "cuda_nvcc" : {
      "name" : "CUDA NVCC",
      "version" : "11.8.89"
   },
   "cuda_nvdisasm" : {
      "name" : "CUDA nvdisasm",
      "version" : "11.8.86"
   },
   "cuda_nvml_dev" : {
      "name" : "CUDA NVML Headers",
      "version" : "11.8.86"
   },
   "cuda_nvprof" : {
      "name" : "CUDA nvprof",
      "version" : "11.8.87"
   },
   "cuda_nvprune" : {
      "name" : "CUDA nvprune",
      "version" : "11.8.86"
   },
   "cuda_nvrtc" : {
      "name" : "CUDA NVRTC",
      "version" : "11.8.89"
   },
   "cuda_nvtx" : {
      "name" : "CUDA NVTX",
      "version" : "11.8.86"
   },
   "cuda_nvvp" : {
      "name" : "CUDA NVVP",
      "version" : "11.8.87"
   },
   "cuda_sanitizer_api" : {
      "name" : "CUDA Compute Sanitizer API",
      "version" : "11.8.86"
   },
   "libcublas" : {
      "name" : "CUDA cuBLAS",
      "version" : "11.11.3.6"
   },
   "libcufft" : {
      "name" : "CUDA cuFFT",
      "version" : "10.9.0.58"
   },
   "libcufile" : {
      "name" : "GPUDirect Storage (cufile)",
      "version" : "1.4.0.31"
   },
   "libcurand" : {
      "name" : "CUDA cuRAND",
      "version" : "10.3.0.86"
   },
   "libcusolver" : {
      "name" : "CUDA cuSOLVER",
      "version" : "11.4.1.48"
   },
   "libcusparse" : {
      "name" : "CUDA cuSPARSE",
      "version" : "11.7.5.86"
   },
   "libnpp" : {
      "name" : "CUDA NPP",
      "version" : "11.8.0.86"
   },
   "libnvjpeg" : {
      "name" : "CUDA nvJPEG",
      "version" : "11.9.0.86"
   },
   "nsight_compute" : {
      "name" : "Nsight Compute",
      "version" : "2022.3.0.22"
   },
   "nsight_systems" : {
      "name" : "Nsight Systems",
      "version" : "2022.4.2.1"
   },
   "nvidia_driver" : {
      "name" : "NVIDIA Linux Driver",
      "version" : "520.61.05"
   },
   "nvidia_fs" : {
      "name" : "NVIDIA file-system",
      "version" : "2.13.5"
   }
}